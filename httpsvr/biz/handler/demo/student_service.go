// Code generated by hertz generator.

package demo

import (
	"context"
	kclient "github.com/cloudwego/kitex/client"
	kdemo "github.com/xueyyyyyyu/httpsvr/kitex_gen/demo"
	"github.com/xueyyyyyyu/httpsvr/kitex_gen/demo/studentservice"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/xueyyyyyyu/httpsvr/biz/model/demo"
)

// Register .
// @router /add-student-info [POST]
func Register(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demo.Student
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demo.RegisterResp)

	c.JSON(consts.StatusOK, resp)
}

// Query .
// @router /query [GET]
func Query(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demo.QueryReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	cli, err := studentservice.NewClient("student-server",
		kclient.WithHostPorts("127.0.0.1:8889"))
	if err != nil {
		panic("err init client:" + err.Error())
	}

	resp, err := cli.Query(context.Background(), &kdemo.QueryReq{
		Id: 1,
	})
	if err != nil {
		panic("err query:" + err.Error())
	}

	c.JSON(consts.StatusOK, resp)
}
